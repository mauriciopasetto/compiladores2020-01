/* Generated By:JavaCC: Do not edit this line. Gramatica20201Constants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Gramatica20201Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO_LINHA = 8;
  /** RegularExpression Id. */
  int DO = 9;
  /** RegularExpression Id. */
  int THIS = 10;
  /** RegularExpression Id. */
  int BODY = 11;
  /** RegularExpression Id. */
  int DESCRIPTION = 12;
  /** RegularExpression Id. */
  int DECLARATION = 13;
  /** RegularExpression Id. */
  int TYPE = 14;
  /** RegularExpression Id. */
  int IS = 15;
  /** RegularExpression Id. */
  int AND = 16;
  /** RegularExpression Id. */
  int AS = 17;
  /** RegularExpression Id. */
  int DESIGNATE = 18;
  /** RegularExpression Id. */
  int READ = 19;
  /** RegularExpression Id. */
  int WRITE = 20;
  /** RegularExpression Id. */
  int ALL = 21;
  /** RegularExpression Id. */
  int REPEAT = 22;
  /** RegularExpression Id. */
  int IGUAL = 23;
  /** RegularExpression Id. */
  int DIFERENTE = 24;
  /** RegularExpression Id. */
  int MENOR = 25;
  /** RegularExpression Id. */
  int MAIOR = 26;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 27;
  /** RegularExpression Id. */
  int MAIOR_IGUAL = 28;
  /** RegularExpression Id. */
  int SOMA = 29;
  /** RegularExpression Id. */
  int SUBTRACAO = 30;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 31;
  /** RegularExpression Id. */
  int DIVISAO = 32;
  /** RegularExpression Id. */
  int POTENCIA = 33;
  /** RegularExpression Id. */
  int DIVISAO_INTEIRA = 34;
  /** RegularExpression Id. */
  int DIVISAO_INTEIRA_RESTO = 35;
  /** RegularExpression Id. */
  int E = 36;
  /** RegularExpression Id. */
  int OU = 37;
  /** RegularExpression Id. */
  int NAO = 38;
  /** RegularExpression Id. */
  int CLOGICA = 39;
  /** RegularExpression Id. */
  int CLITERAL = 40;
  /** RegularExpression Id. */
  int ASCIIC = 41;
  /** RegularExpression Id. */
  int CINTEIRO = 42;
  /** RegularExpression Id. */
  int CREAL = 43;
  /** RegularExpression Id. */
  int DIGITO = 44;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 45;
  /** RegularExpression Id. */
  int LEFT_PAREN = 46;
  /** RegularExpression Id. */
  int RIGHT_PAREN = 47;
  /** RegularExpression Id. */
  int DIGIT = 48;
  /** RegularExpression Id. */
  int LETTER = 49;
  /** RegularExpression Id. */
  int SIMBOLO = 50;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMENTARIO_BLOCO = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 7>",
    "<COMENTARIO_LINHA>",
    "\"do\"",
    "\"this\"",
    "\"body\"",
    "\"description\"",
    "\"declaration\"",
    "\"type\"",
    "\"is\"",
    "\"and\"",
    "\"as\"",
    "\"designate\"",
    "\"read\"",
    "\"write\"",
    "\"all\"",
    "\"repeat\"",
    "\"==\"",
    "\"!=\"",
    "\"<<\"",
    "\">>\"",
    "\"<<==\"",
    "\">>==\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"**\"",
    "\"%\"",
    "\"%%\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "<CLOGICA>",
    "<CLITERAL>",
    "<ASCIIC>",
    "<CINTEIRO>",
    "<CREAL>",
    "<DIGITO>",
    "<IDENTIFICADOR>",
    "\"(\"",
    "\")\"",
    "<DIGIT>",
    "<LETTER>",
    "\"_\"",
  };

}
