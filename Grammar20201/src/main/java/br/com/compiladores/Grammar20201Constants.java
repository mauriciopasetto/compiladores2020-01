/* Generated By:JavaCC: Do not edit this line. Grammar20201Constants.java */
package br.com.compiladores;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Grammar20201Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO_LINHA = 8;
  /** RegularExpression Id. */
  int DO = 9;
  /** RegularExpression Id. */
  int THIS = 10;
  /** RegularExpression Id. */
  int BODY = 11;
  /** RegularExpression Id. */
  int DESCRIPTION = 12;
  /** RegularExpression Id. */
  int DECLARATION = 13;
  /** RegularExpression Id. */
  int TYPE = 14;
  /** RegularExpression Id. */
  int IS = 15;
  /** RegularExpression Id. */
  int CONSTANT = 16;
  /** RegularExpression Id. */
  int AND = 17;
  /** RegularExpression Id. */
  int VARIABLE = 18;
  /** RegularExpression Id. */
  int AS = 19;
  /** RegularExpression Id. */
  int INTEGER = 20;
  /** RegularExpression Id. */
  int REAL = 21;
  /** RegularExpression Id. */
  int STRING = 22;
  /** RegularExpression Id. */
  int LOGIC = 23;
  /** RegularExpression Id. */
  int DESIGNATE = 24;
  /** RegularExpression Id. */
  int READ = 25;
  /** RegularExpression Id. */
  int WRITE = 26;
  /** RegularExpression Id. */
  int ALL = 27;
  /** RegularExpression Id. */
  int REPEAT = 28;
  /** RegularExpression Id. */
  int AVALIATE = 29;
  /** RegularExpression Id. */
  int RESULT = 30;
  /** RegularExpression Id. */
  int TRUE = 31;
  /** RegularExpression Id. */
  int UNTRUE = 32;
  /** RegularExpression Id. */
  int COLCH_ESQ = 33;
  /** RegularExpression Id. */
  int COLCH_DIR = 34;
  /** RegularExpression Id. */
  int PONTO = 35;
  /** RegularExpression Id. */
  int VIRG = 36;
  /** RegularExpression Id. */
  int PAREN_ESQ = 37;
  /** RegularExpression Id. */
  int PAREN_DIR = 38;
  /** RegularExpression Id. */
  int IGUAL = 39;
  /** RegularExpression Id. */
  int DIFERENTE = 40;
  /** RegularExpression Id. */
  int MENOR = 41;
  /** RegularExpression Id. */
  int MAIOR = 42;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 43;
  /** RegularExpression Id. */
  int MAIOR_IGUAL = 44;
  /** RegularExpression Id. */
  int IGUAL_DEC = 45;
  /** RegularExpression Id. */
  int SOMA = 46;
  /** RegularExpression Id. */
  int SUBTRACAO = 47;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 48;
  /** RegularExpression Id. */
  int DIVISAO = 49;
  /** RegularExpression Id. */
  int POTENCIA = 50;
  /** RegularExpression Id. */
  int DIVISAO_INTEIRA = 51;
  /** RegularExpression Id. */
  int DIVISAO_INTEIRA_RESTO = 52;
  /** RegularExpression Id. */
  int E = 53;
  /** RegularExpression Id. */
  int OU = 54;
  /** RegularExpression Id. */
  int NAO = 55;
  /** RegularExpression Id. */
  int CLITERAL = 56;
  /** RegularExpression Id. */
  int ASCIIC = 57;
  /** RegularExpression Id. */
  int CINTEIRO = 58;
  /** RegularExpression Id. */
  int CREAL = 59;
  /** RegularExpression Id. */
  int DIGITO = 60;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 61;
  /** RegularExpression Id. */
  int DIGIT = 62;
  /** RegularExpression Id. */
  int LETTER = 63;
  /** RegularExpression Id. */
  int SIMBOLO = 64;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMENTARIO_BLOCO = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 7>",
    "<COMENTARIO_LINHA>",
    "\"do\"",
    "\"this\"",
    "\"body\"",
    "\"description\"",
    "\"declaration\"",
    "\"type\"",
    "\"is\"",
    "\"constant\"",
    "\"and\"",
    "\"variable\"",
    "\"as\"",
    "\"integer\"",
    "\"real\"",
    "\"string\"",
    "\"logic\"",
    "\"designate\"",
    "\"read\"",
    "\"write\"",
    "\"all\"",
    "\"repeat\"",
    "\"avaliate\"",
    "\"result\"",
    "\"true\"",
    "\"untrue\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"==\"",
    "\"!=\"",
    "\"<<\"",
    "\">>\"",
    "\"<<==\"",
    "\">>==\"",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"**\"",
    "\"%\"",
    "\"%%\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "<CLITERAL>",
    "<ASCIIC>",
    "<CINTEIRO>",
    "<CREAL>",
    "<DIGITO>",
    "<IDENTIFICADOR>",
    "<DIGIT>",
    "<LETTER>",
    "\"_\"",
  };

}
